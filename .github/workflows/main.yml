name: CI/CD - FastAPI HuggingFace K8s

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: mrdoufy/fastapi-app
  KUBE_DEPLOYMENT: gpt-huggingface
  KUBE_NAMESPACE: default

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    environment: prd
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}   # ðŸ‘ˆ expose it as job output

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Set image tag
        id: set_tag
        run: |
          echo "image_tag=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Build and push multi-arch image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $IMAGE_NAME:${{ steps.set_tag.outputs.image_tag }} \
            -t $IMAGE_NAME:latest --push --provenance=false .

  trivy_scan:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: prd
    steps:
      - name: Scan image with Trivy
        continue-on-error: true
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_TIMEOUT: 15m
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ needs.build_and_push.outputs.image_tag }}
          format: 'table'
          exit-code: '0'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln'
          ignore-unfixed: true

  deploy_to_k8s:
    runs-on: ubuntu-latest
    needs: trivy_scan
    environment: prd
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/${{ env.KUBE_DEPLOYMENT }} \
            gptcontainer=${{ env.IMAGE_NAME }}:${{ needs.build_and_push.outputs.image_tag }} \
            -n ${{ env.KUBE_NAMESPACE }}
          kubectl rollout status deployment/${{ env.KUBE_DEPLOYMENT }} -n ${{ env.KUBE_NAMESPACE }}
